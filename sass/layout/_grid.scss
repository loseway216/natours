.row {
  max-width: $grid-width;
  margin: 0 auto;

  // 除了最后一个子元素
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  // 改变row的最大宽度
  @include respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  // minx的使用方法
  @include clearfix;

  // ^是以"col-"开头的属性选择器， *是含有，$是以XXX结尾
  [class^="col-"] {
    float: left;

    // 一行只显示一列
    @include respond(tab-port) {
      width: 100% !important;
    }

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }
  }

  // calc方法支持把px和rem多种单位混合计算，因为渲染阶段才能计算，是css原生的，而不是sass的
  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(
      (100% - 2 * #{$gutter-horizontal}) / 3 * 2 + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 2 + #{$gutter-horizontal});
  }

  .col-3-of-4 {
    width: calc(
      (100% - 3 * #{$gutter-horizontal}) / 4 * 3 + 2 * #{$gutter-horizontal}
    );
  }
}
